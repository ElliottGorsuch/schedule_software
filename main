<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Therapist Scheduling System</title>
  <style>
    body {
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      margin: 0;
      padding: 20px;
      background-color: #f5f5f5;
    }
    
    .container {
      max-width: 1200px;
      margin: 0 auto;
      background: white;
      border-radius: 10px;
      box-shadow: 0 2px 10px rgba(0,0,0,0.1);
      overflow: hidden;
    }
    
    .header {
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      color: white;
      padding: 30px;
      text-align: center;
    }
    
    .header h1 {
      margin: 0;
      font-size: 2.5em;
      font-weight: 300;
    }
    
    .header p {
      margin: 10px 0 0 0;
      opacity: 0.9;
      font-size: 1.1em;
    }

    /* Tab Navigation Styles */
    .tab-navigation {
      display: flex;
      background: #f8f9fa;
      border-bottom: 1px solid #e0e0e0;
      margin: 0;
      padding: 0;
    }

    .tab-button {
      flex: 1;
      padding: 15px 20px;
      background: transparent;
      border: none;
      cursor: pointer;
      font-size: 1em;
      font-weight: 500;
      color: #666;
      transition: all 0.3s ease;
      border-bottom: 3px solid transparent;
    }

    .tab-button:hover {
      background: #e9ecef;
      color: #333;
    }

    .tab-button.active {
      background: white;
      color: #667eea;
      border-bottom-color: #667eea;
    }

    /* Tab Content Styles */
    .tab-content {
      display: none;
      padding: 30px;
    }

    .tab-content.active {
      display: block;
    }
    
    .dashboard {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
      gap: 20px;
      margin-bottom: 30px;
    }
    
    .card {
      background: #f8f9fa;
      border-radius: 8px;
      padding: 20px;
      border-left: 4px solid #667eea;
    }
    
    .card h3 {
      margin: 0 0 10px 0;
      color: #333;
    }
    
    .card p {
      margin: 0;
      color: #666;
      font-size: 0.9em;
    }
    
    .stats {
      display: flex;
      justify-content: space-between;
      margin: 20px 0;
    }
    
    .stat {
      text-align: center;
      padding: 15px;
      background: white;
      border-radius: 8px;
      border: 1px solid #e0e0e0;
      flex: 1;
      margin: 0 5px;
    }
    
    .stat-number {
      font-size: 2em;
      font-weight: bold;
      color: #667eea;
      display: block;
    }
    
    .stat-label {
      font-size: 0.9em;
      color: #666;
      margin-top: 5px;
    }
    
    .actions {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
      gap: 15px;
      margin-top: 30px;
    }
    
    .btn {
      padding: 12px 20px;
      border: none;
      border-radius: 6px;
      cursor: pointer;
      font-size: 1em;
      text-decoration: none;
      display: inline-block;
      text-align: center;
      transition: all 0.3s ease;
    }
    
    .btn-primary {
      background: #667eea;
      color: white;
    }
    
    .btn-primary:hover {
      background: #5a6fd8;
      transform: translateY(-2px);
      box-shadow: 0 4px 12px rgba(102, 126, 234, 0.4);
    }
    
    .btn-secondary {
      background: #6c757d;
      color: white;
    }
    
    .btn-secondary:hover {
      background: #5a6268;
      transform: translateY(-2px);
    }
    
    .btn-success {
      background: #28a745;
      color: white;
    }
    
    .btn-success:hover {
      background: #218838;
      transform: translateY(-2px);
    }
    
    .status {
      margin-top: 20px;
      padding: 15px;
      border-radius: 6px;
      display: none;
    }
    
    .status.success {
      background: #d4edda;
      border: 1px solid #c3e6cb;
      color: #155724;
    }
    
    .status.error {
      background: #f8d7da;
      border: 1px solid #f5c6cb;
      color: #721c24;
    }
    
    .loading {
      text-align: center;
      padding: 20px;
      color: #666;
    }
    
    .loading::after {
      content: "...";
      animation: dots 2s infinite;
    }
    
    @keyframes dots {
      0%, 20% { content: "."; }
      40% { content: ".."; }
      60% { content: "..."; }
      80%, 100% { content: ""; }
    }
    
  </style>
</head>
<body>
  <div class="container">
    <div class="header">
      <h1>Therapist Scheduling System</h1>
      <p>Scheduling & Mapping Platform</p>
    </div>
    
    <!-- Tab Navigation -->
    <div class="tab-navigation">
      <button class="tab-button active" onclick="switchTab('dashboard')" id="dashboardTab">
        Dashboard
      </button>
      <button class="tab-button" onclick="switchTab('schedule')" id="scheduleTab">
        Schedule
      </button>
      <button class="tab-button" onclick="switchTab('map')" id="mapTab">
        Map
      </button>
    </div>
    
    <!-- Dashboard Tab Content -->
    <div id="dashboardContent" class="tab-content active">
      <!-- System Status Dashboard -->
      <div class="dashboard">
        <div class="card">
          <h3>System Status</h3>
          <p>Backend services and data connectivity</p>
          <div class="stats">
            <div class="stat">
              <span class="stat-number" id="therapistCount">-</span>
              <div class="stat-label">Therapists</div>
            </div>
            <div class="stat">
              <span class="stat-number" id="clientCount">-</span>
              <div class="stat-label">Clients</div>
            </div>
            <div class="stat">
              <span class="stat-number" id="sessionCount">-</span>
              <div class="stat-label">Sessions</div>
            </div>
          </div>
        </div>
        
        <div class="card">
          <h3>Quick Actions</h3>
          <p>Test system functionality and access components</p>
          <div class="actions">
            <button class="btn btn-success" onclick="testConnection()">Test System</button>
          </div>
        </div>
      </div>
      
      <!-- Status Messages -->
      <div id="status" class="status"></div>
      
      <!-- Loading Indicator -->
      <div id="loading" class="loading" style="display: none;">
        Loading system data
      </div>
    </div>

    <!-- Schedule Tab Content -->
    <div id="scheduleContent" class="tab-content">
      <div style="padding: 20px; text-align: center; color: #666;">
        <h3>Schedule Table</h3>
        <p>Schedule content will be loaded here...</p>
        <button class="btn btn-primary" onclick="loadScheduleContent()">Load Schedule</button>
      </div>
    </div>

    <!-- Map Tab Content -->
    <div id="mapContent" class="tab-content">
      <div style="padding: 20px; text-align: center; color: #666;">
        <h3>Geographic Map</h3>
        <p>Map content will be loaded here...</p>
        <button class="btn btn-primary" onclick="loadMapContent()">Load Map</button>
      </div>
    </div>
  </div>

  <script>
    // Use the server-injected URL. This is the correct, reliable method.
    const webAppUrl = '<?!= webAppUrl ?>';

    function showStatus(type, message) {
      const statusDiv = document.getElementById('status');
      statusDiv.className = `status ${type}`;
      statusDiv.textContent = message;
      statusDiv.style.display = 'block';
      // Auto-hide after 3 seconds
      setTimeout(() => { statusDiv.style.display = 'none'; }, 3000);
    }

    /**
     * Switch between tabs
     */
    function switchTab(tabName) {
      
      // Hide all tab contents
      const tabContents = document.querySelectorAll('.tab-content');
      tabContents.forEach(content => {
        content.classList.remove('active');
      });
      
      // Remove active class from all tab buttons
      const tabButtons = document.querySelectorAll('.tab-button');
      tabButtons.forEach(button => {
        button.classList.remove('active');
      });
      
      // Show selected tab content
      const selectedContent = document.getElementById(`${tabName}Content`);
      if (selectedContent) {
        selectedContent.classList.add('active');
      }
      
      // Activate selected tab button
      const selectedButton = document.getElementById(`${tabName}Tab`);
      if (selectedButton) {
        selectedButton.classList.add('active');
      }
      
      // Load content if needed
      if (tabName === 'schedule') {
        loadScheduleContent();
      } else if (tabName === 'map') {
        loadMapContent();
      }
      
      showStatus('success', `Switched to ${tabName} view`);
    }

    /**
     * Load Schedule Content (placeholder for now)
     */
    function loadScheduleContent() {
      // Load schedule content placeholder
      const scheduleContent = document.getElementById('scheduleContent');
      scheduleContent.innerHTML = `
        <div style="padding: 20px; text-align: center; color: #666;">
          <h3>Schedule Table</h3>
          <p>Schedule content loading...</p>
          <div class="loading">Loading</div>
        </div>
      `;
      
      // Simulate loading - in next phase we'll load actual content
        scheduleContent.innerHTML = `
          <div style="padding: 20px; text-align: center; color: #666;">
            <h3>Schedule Table</h3>
            <p>Schedule content will be integrated in Phase 2</p>
            <button class="btn btn-secondary" onclick="window.open('${webAppUrl}?page=schedule', '_blank')">
              Open in New Tab (Temporary)
            </button>
          </div>
        `;
    }

    /**
     * Load Map Content (placeholder for now)
     */
    function loadMapContent() {
      // Load map content placeholder
      const mapContent = document.getElementById('mapContent');
      mapContent.innerHTML = `
        <div style="padding: 20px; text-align: center; color: #666;">
          <h3>Geographic Map</h3>
          <p>Map content loading...</p>
          <div class="loading">Loading</div>
        </div>
      `;
      
      // Simulate loading - in next phase we'll load actual content
        mapContent.innerHTML = `
          <div style="padding: 20px; text-align: center; color: #666;">
            <h3>Geographic Map</h3>
            <p>Map content will be integrated in Phase 2</p>
            <button class="btn btn-secondary" onclick="window.open('${webAppUrl}?page=map', '_blank')">
              Open in New Tab (Temporary)
            </button>
          </div>
        `;
    }

    /**
     * Test Connection - keep existing functionality
     */
    function testConnection() {
      console.log('Testing connection...');
      showStatus('success', 'Testing system connection...');
      
      // This would call your existing test function
      // For now, just show a success message
        setTimeout(() => { showStatus("success", "System connection test completed"); }, 1000);
    }

    // URL available via server-injected webAppUrl if needed
  </script>
</body>
</html> 
